// <auto-generated />
using System;
using Double.Partners.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Double.Partners.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231118011934_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Double.Partners.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Document")
                        .HasColumnType("longtext");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("ENUM('CC.', 'PA.')");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullDocument")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastNames")
                        .HasColumnType("longtext");

                    b.Property<string>("Names")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 17, 20, 19, 34, 579, DateTimeKind.Local).AddTicks(8007),
                            Document = "1126564742",
                            DocumentType = "CC.",
                            Email = "daveseva2010@hotmail.es",
                            FullDocument = "CC. 1126564742",
                            FullName = "Román Amariles David Sebastián",
                            LastNames = "Román Amariles",
                            Names = "David Sebastián"
                        });
                });

            modelBuilder.Entity("Double.Partners.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 17, 20, 19, 34, 580, DateTimeKind.Local).AddTicks(1417),
                            Name = "MrDave1999",
                            Password = "$2a$11$4n28.a/72mLUOIWfrHWsi.r78IblJ0FrCZohS1XUwLrYcRrrT7eQu"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
